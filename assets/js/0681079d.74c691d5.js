"use strict";(self.webpackChunkskyhitz=self.webpackChunkskyhitz||[]).push([[318],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>h});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),s=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,p=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),c=s(n),m=a,h=c["".concat(p,".").concat(m)]||c[m]||d[m]||i;return n?r.createElement(h,o(o({ref:t},u),{},{components:n})):r.createElement(h,o({ref:t},u))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=m;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[c]="string"==typeof e?e:a,o[1]=l;for(var s=2;s<i;s++)o[s]=n[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},238:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>c,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var r=n(7462),a=(n(7294),n(3905));const i={sidebar_position:3},o=void 0,l={unversionedId:"skyhitz-expo-next/guidelines",id:"skyhitz-expo-next/guidelines",title:"guidelines",description:"Branches",source:"@site/docs/skyhitz-expo-next/guidelines.md",sourceDirName:"skyhitz-expo-next",slug:"/skyhitz-expo-next/guidelines",permalink:"/docs/skyhitz-expo-next/guidelines",draft:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"graphql",permalink:"/docs/skyhitz-expo-next/graphql"},next:{title:"sendwyre",permalink:"/docs/skyhitz-expo-next/sendwyre"}},p={},s=[{value:"Branches",id:"branches",level:2},{value:"Continous Integration",id:"continous-integration",level:2},{value:"Releasing a new version",id:"releasing-a-new-version",level:2}],u={toc:s};function c(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"branches"},"Branches"),(0,a.kt)("p",null,"Our default GitHub branch is ",(0,a.kt)("inlineCode",{parentName:"p"},"master")," branch. It is set up to be automatically deployed with a staging environment on ",(0,a.kt)("inlineCode",{parentName:"p"},"https://skyhitz-expo-next.vercel.app"),".\nWe also have ",(0,a.kt)("inlineCode",{parentName:"p"},"prod")," branch, which is set up to be automatically deployed with the production environment on ",(0,a.kt)("inlineCode",{parentName:"p"},"https://skyhitz.io"),".\nBoth branches are protected and require pull requests.\nIf you want to create a new branch prefix it with ",(0,a.kt)("inlineCode",{parentName:"p"},"feature/")," or ",(0,a.kt)("inlineCode",{parentName:"p"},"fix/")," depending on the details of the ticket."),(0,a.kt)("p",null,"Summary:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"master")," - default and staging branch. Protected."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"prod")," - production branch. Protected."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"feature/*")," - feature branches."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"fix/*")," - branches with fixes.")),(0,a.kt)("h2",{id:"continous-integration"},"Continous Integration"),(0,a.kt)("p",null,"We had a few checks set up that run on each pull request to the protected branch."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"ci")," - checks types, linting, and formatting."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"expo-preview")," - generates expo preview"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"vercel")," - builds and deploys app using vercel preview deployment")),(0,a.kt)("p",null,"To merge pull requests to protected branch, the following things are required:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"pull request has to be approved"),(0,a.kt)("li",{parentName:"ul"},"all checks have to pass"),(0,a.kt)("li",{parentName:"ul"},"there must be no conflicts with the protected branch")),(0,a.kt)("h2",{id:"releasing-a-new-version"},"Releasing a new version"),(0,a.kt)("p",null,"In order to release a new version of the app to production, follow these steps:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Use a staging environment to test whether the app is bug-free."),(0,a.kt)("li",{parentName:"ol"},"Create a new branch ",(0,a.kt)("inlineCode",{parentName:"li"},"release/<version>")," and bump versions in ",(0,a.kt)("inlineCode",{parentName:"li"},"app.json")," file."),(0,a.kt)("li",{parentName:"ol"},"Merge this branch to ",(0,a.kt)("inlineCode",{parentName:"li"},"master")),(0,a.kt)("li",{parentName:"ol"},"Schedule new builds using eas. In the ",(0,a.kt)("inlineCode",{parentName:"li"},"apps/expo")," directory run the following command:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"eas build --platform all --profile production\n")),(0,a.kt)("ol",{start:5},(0,a.kt)("li",{parentName:"ol"},"Create a pull request from ",(0,a.kt)("inlineCode",{parentName:"li"},"master")," branch to ",(0,a.kt)("inlineCode",{parentName:"li"},"prod")," branch"),(0,a.kt)("li",{parentName:"ol"},"Upload the build to the stores")))}c.isMDXComponent=!0}}]);